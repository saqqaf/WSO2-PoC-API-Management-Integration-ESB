services:
  apim:
    image: wso2/wso2am:4.3.0-alpine
    container_name: wso2-apim
    networks:
      - wso2-net
      - shared-network
    ports:
      - '9443:9443'
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - RUNTIME_PROFILE=default
    volumes:
      - esb_repo:/home/wso2carbon/repository/deployment/server
      - ./entrypoint.sh:/home/wso2carbon/wso2am-4.3.0/bin/entrypoint.sh
      - ./postgresql-42.6.0.jar:/home/wso2carbon/wso2am-4.3.0/repository/components/lib/postgresql-42.6.0.jar
    entrypoint: ["/home/wso2carbon/wso2am-4.3.0/bin/entrypoint.sh"]
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "https://localhost:9443/carbon/admin/login.jsp"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
  esb:
    image: wso2/wso2ei-integrator:latest
    container_name: wso2-esb
    networks:
      - wso2-net
      - shared-network
    ports:
      - '8290:8290'
      - '8243:8243'
    depends_on:
      - postgres
    environment:
      - DATABASE_URL=jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    volumes:
      - esb_repo:/home/wso2carbon/repository/deployment/server

  postgres:
    image: postgres:13
    container_name: postgres
    networks:
      - wso2-net
      - shared-network
    ports:
      - '${POSTGRES_PORT}:5432'
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USERNAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    networks:
      - wso2-net
    ports:
      - '5672:5672'
      - '15672:15672'

  mockapi:
    image: kennethreitz/httpbin
    container_name: mockapi
    networks:
      - wso2-net
      - shared-network
    ports:
      - '8000:80'

  loki:
    image: grafana/loki:2.4.1
    container_name: loki
    networks:
      - wso2-net
      - shared-network
    volumes:
      - loki_data:/loki
    ports:
      - '3100:3100'

  promtail:
    image: grafana/promtail:2.4.1
    container_name: promtail
    networks:
      - wso2-net
      - shared-network
    volumes:
      - .:/etc/promtail/
    command: -config.file=/etc/promtail/promtail-config.yml

  prometheus:
    image: prom/prometheus:v2.37.0
    container_name: prometheus
    networks:
      - wso2-net
      - shared-network
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - '9090:9090'

  grafana:
    image: grafana/grafana:9.2.1
    container_name: grafana
    networks:
      - wso2-net
      - shared-network
    ports:
      - '${GRAFANA_PORT}:3000'
    depends_on:
      - prometheus
      - loki

volumes:
  postgres_data:
  esb_repo:
  loki_data:

networks:
  wso2-net:
    driver: bridge
  shared-network:
    external: true
